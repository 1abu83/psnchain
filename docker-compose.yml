version: '3.8'

services:
  # PSNChain Backend API
  psnchain-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: psnchain-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - API_PORT=3001
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/.env:/app/.env
    networks:
      - psnchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PSNChain Frontend
  psnchain-frontend:
    build:
      context: ./fontend
      dockerfile: Dockerfile
    container_name: psnchain-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
    depends_on:
      - psnchain-api
    networks:
      - psnchain-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: psnchain-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - psnchain-api
      - psnchain-frontend
    networks:
      - psnchain-network

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: psnchain-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - psnchain-network

networks:
  psnchain-network:
    driver: bridge

volumes:
  redis-data: